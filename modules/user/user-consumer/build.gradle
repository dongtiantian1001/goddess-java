apply from: '../../../config.gradle'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
        classpath("org.springframework:springloaded:1.2.7.RELEASE")
    }
}
apply plugin: 'org.springframework.boot'
bootRun{
    addResources = true
}
jar {
    String buildDir = project.buildDir
    manifest {
        attributes(
                "Main-Class": "com.bjike.goddess.user.Application",//main主函数加载入口
                "Class-Path": new File(buildDir + '/libs/lib').list().collect { "lib/${it}" }.join(" ")
        )
    }

}

task copyJars(type: Copy) {
    from configurations.runtime
    into new File('build/libs/lib') // 目标位置
}
compileJava.dependsOn copyJars

def env = hasProperty("pro") ? "pro" : (hasProperty("dev") ? "dev" : null)
sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/profile/$env"]
        }
    }
}
dependencies {

    compile(project(":common:common-consumer")) {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    compile project(":modules:user:user-api")
    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude group: 'com.fasterxml.jackson.core'
    }

    compile group: 'com.caucho', name: 'hessian', version: "$hessian_version"
    compile project(":modules:storage:storage-api")
    compile project(":modules:attendance:attendance-api")
    compile project(":modules:lendreimbursement:lendreimbursement-api")
    compile project(":modules:event:event-api")
    compile project(":modules:staffentry:staffentry-api")

}



